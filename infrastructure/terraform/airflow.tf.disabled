resource "kubernetes_namespace" "airflow" {
  metadata {
    name = "airflow"
  }
}

resource "helm_release" "airflow" {
  name       = "airflow"
  repository = "https://airflow.apache.org"
  chart      = "airflow"
  namespace  = kubernetes_namespace.airflow.metadata[0].name
  depends_on = [kubernetes_namespace.airflow]
  values = [file("${path.module}/../k8s/charts/airflow-values.yaml")]
  timeout = 600

  set = [
    {
      name  = "airflow.image.pullPolicy"
      value = "IfNotPresent"  # Set pull policy to Always for the latest image
    }
  ]
}

resource "kubernetes_ingress_v1" "airflow" {
  metadata {
    name      = "airflow-ingress"
    namespace = kubernetes_namespace.airflow.metadata[0].name
    annotations = {
      "kubernetes.io/ingress.class"                = "nginx"
      "nginx.ingress.kubernetes.io/rewrite-target" = "/"
      "nginx.ingress.kubernetes.io/ssl-redirect"   = var.environment == "production" ? "true" : "false"
    }
  }

  spec {
    rule {
      host = var.airflow_domain
      http {
        path {
          path      = "/"
          path_type = "Prefix"
          backend {
            service {
              name = "airflow-api-server"
              port {
                number = 8080
              }
            }
          }
        }
      }
    }

    # TLS configuration for production
    dynamic "tls" {
      for_each = var.environment == "production" ? [1] : []
      content {
        hosts       = [var.airflow_domain]
        secret_name = "airflow-tls"
      }
    }
  }

  depends_on = [helm_release.nginx_ingress, helm_release.airflow]
}